apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'eclipse-wtp'
apply plugin: 'idea'
apply plugin: 'war'
apply plugin: 'jetty'

sourceCompatibility = 1.7
version = '1.0'

repositories {
    mavenCentral()
}

version = '1.0'

jar {
     manifest.attributes provider: 'Movile Project'
}


dependencies {

	compile 'org.springframework:spring-context:4.0.0.RELEASE'
	compile 'org.springframework:spring-core:4.0.0.RELEASE'
	compile 'org.springframework:spring-jdbc:4.0.0.RELEASE'
	compile 'org.springframework:spring-webmvc:4.0.0.RELEASE'
	compile 'org.springframework:spring-orm:4.0.0.RELEASE'
    compile 'org.hibernate:hibernate-core:4.3.1.Final'
    compile 'org.hibernate:hibernate-validator:4.3.1.Final'
    
    providedCompile 'javax.servlet:servlet-api:2.5'
	compile 'jstl:jstl:1.2'

    compile 'org.codehaus.jackson:jackson-mapper-asl:1.9.12'

    runtime 'mysql:mysql-connector-java:5.1.30'
	//runtime 'postgresql:postgresql:9.1-901.jdbc4'
	compile 'javax.validation:validation-api:1.0.0.GA'
    

	compile 'org.apache.commons:commons-lang3:3.1'
	compile 'org.apache.commons:commons-io:1.3.2'
	compile 'commons-dbcp:commons-dbcp:1.4'
	
	
	compile 'opensymphony:sitemesh:2.4.2'
	
	compile "org.slf4j:slf4j-api:1.7.5"
	compile "ch.qos.logback:logback-core:1.0.13"
	compile "ch.qos.logback:logback-classic:1.0.13"
	
	testCompile 'org.springframework:spring-test:4.0.0.RELEASE'
	testCompile 'junit:junit:4.11'
}
            

configurations {
	provided
}

sourceSets {
	main { compileClasspath += configurations.provided }
}

eclipse {

  //if you want parts of paths in resulting file(s) to be replaced by variables (files):
  pathVariables 'TOMCAT_HOME': file('/opt/tomcat7')

  classpath {
     plusConfigurations += configurations.provided
     noExportConfigurations += configurations.provided 
  }
    
  wtp {
    component {
       minusConfigurations += configurations.provided
    }

    facet {
         facet name: 'java', version: '1.7'
         facet name: 'jst.web', version: '3.0'
         facet name: 'wst.jsdt.web', version: '1.0'
     }
  }
}


task wrapper(type: Wrapper) {
    gradleVersion = '1.10'
}

test {
  // show standard out and standard error of the test JVM(s) on the console
  //testLogging.showStandardStreams = true

  // set heap size for the test JVM(s)
  minHeapSize = "128m"
  maxHeapSize = "512m"

  // set JVM arguments for the test JVM(s)
  jvmArgs '-XX:MaxPermSize=256m'
  
  testLogging {
        events 'started', 'passed'
  }
}
